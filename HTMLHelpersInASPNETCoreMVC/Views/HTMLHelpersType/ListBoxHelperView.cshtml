@model HTMLHelpersInASP.NETCoreMVC.Models.Product

<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#employeeModal">
    Edit Product
</button>


<div class="modal fade" id="employeeModal" tabindex="-1" aria-labelledby="employeeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form>
                <div class="modal-header">
                    <h5 class="modal-title" id="employeeModalLabel">Edit Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        @Html.Label("productname", "Product Name :")
                        @Html.TextBoxFor(prodcut => prodcut.ProductName, new { @class = "form-control", @id = "productname" })
                        @* <label for="name" class="col-form-label">Product Name:</label>
                        <input type="text" class="form-control" id="productname"> *@
                    </div>
                    <div class="mb-3">
                        @Html.Label("textAreaExample", "Product Description :")
                        @Html.TextAreaFor(prodcut => prodcut.Description, new { @class = " form-control", @rows = "4", @id = "textAreaExample" })

                        @* <label for="textAreaExample" class="col-form-label">Description :</label>
                        <textarea class="form-control" id="textAreaExample" rows="4"></textarea> *@
                    </div>
                    <div class="mb-3">
                        @Html.Label("isInStock", "Product IsInStock :")
                        @Html.TextBoxFor(prodcut => prodcut.IsInStock, new { @class = "form-control", @id = "isInStock" })
                        @*  <label for="position" class="col-form-label">IsInStock:</label>
                        <input type="text" class="form-control" id="position"> *@
                    </div>
                    <div class="mb-3">
                        @Html.Label("ratingid", "Product Rating :")
                        @Html.TextBoxFor(prodcut => prodcut.Rating, new { @class = "form-control", @id = "ratingid" })
                        @*  <label for="position" class="col-form-label">Rating:</label>
                        <input type="text" class="form-control" id="position"> *@
                    </div>

                    <div class="mb-3">
                        @Html.Label("categoryid", "Product Category :")
                        @* Dynamic ViewBag data passed into the DropDownList *@
                        @Html.DropDownList("ProductCategory", @ViewBag.ListproductCategories as List<SelectListItem>, Model.ProductCategory, new { @class = "form-select", @id = "categoryid" })

                        @*

                        //Static binding of DropDownList
                        @Html.DropDownList("ProductCategory", new List<SelectListItem>
                        {
                        // new SelectListItem{ Text="Please select Category" , Value="0", Selected=true},
                        new SelectListItem{ Text="SmartPhone" , Value="1" },
                        new SelectListItem{ Text="SmartTV" , Value="2" },
                        new SelectListItem{ Text="Fridge" , Value="3"},
                        }, "Please select Category");

                        @*  <label for="position" class="col-form-label">Rating:</label>
                        <input type="text" class="form-control" id="position">

                        *@
                    </div>
                    <div class="mb-3">
                        @Html.Label("MadeInCountry", "Made In Country :")
                        @Html.DropDownListFor(product => product.MadeInCountry, @ViewBag.ListCountries as List<SelectListItem>, Model.MadeInCountry, new { @class = "form-select", @id = "MadeInCountry" })
                    </div>


                    <div class="mb-3">

                        @*
                        // Basic example for RadioButton
                        Male : @Html.RadioButton("Gender", "Male")
                        Female : @Html.RadioButton("Gender", "Female")
                        Others : @Html.RadioButton("Gender", "others") *@

                        @foreach (var warranty in @Model.warrantyOfProducts)
                        {
                            @Html.RadioButton("WarrantyOfProduct", warranty.Id, warranty.defaultWarranty, new { @class = "form-check-input" })
                            @warranty.WarrantyYears


                        }
                    </div>
                    @*  <div class="mb-3">

                    @foreach (var warranty in @Model.warrantyOfProducts)
                    {
                    @Html.RadioButtonFor(product => product.WarrantyOfProduct, warranty.Id, new { @class = "form-check-input" })
                    @warranty.WarrantyYears
                    }
                    </div> *@


                    <div class="mb-3">

                        @*

                        //Basic example for CheckBox
                        @Html.CheckBox("IsAdmin")
                        <input type="checkbox" name="IsAdmin" checked />

                        *@

                        @foreach (var featureObj in @Model.productFeatures)
                        {
                            @Html.CheckBox(featureObj.FeatureName, featureObj.defaultFeature) @featureObj.FeatureName
                        }


                    </div>

                    <div class="mb-3">
                        @for (int i = 0; i < Model.productFeatures.Count; i++)
                        {
                            @Html.CheckBoxFor(product => product.productFeatures[i].defaultFeature) @Model.productFeatures[i].FeatureName
                        }
                    </div>

                    <div class="mb-3">
                      @*   @Html.ListBox("SelectedBranch", Model.manufacturingBranches, new { @class = "form-select", size = 4 })*@
                        @Html.ListBoxFor(product => product.SelectedBranch, Model.manufacturingBranches, new { @class = "form-select", size = 4 })
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
